apiVersion: v1
kind: ConfigMap
metadata:
  name: pgpool-config
  namespace: postgresql
data:
  PGPOOL_PARAMS_PORT: "5432"
  PGPOOL_PARAMS_BACKEND_HOSTNAME0: acid-minimal-cluster.postgresql
#  PGPOOL_PARAMS_BACKEND_HOSTNAME1: acid-minimal-cluster-repl.postgresql
  PGPOOL_PARAMS_BACKEND_PORT0: "5432"
#  PGPOOL_PARAMS_BACKEND_PORT1: "5432"
  PGPOOL_PARAMS_BACKEND_FLAG0: "ALWAYS_PRIMARY|DISALLOW_TO_FAILOVER"
#  PGPOOL_PARAMS_BACKEND_FLAG1: "DISALLOW_TO_FAILOVER"
  PGPOOL_PARAMS_FAILOVER_ON_BACKEND_ERROR: "off"
  PGPOOL_PARAMS_LOAD_BALANCE_MODE: "on"
  PGPOOL_PARAMS_CONNECTION_CACHE: "on"
  PGPOOL_PARAMS_LISTEN_ADDRESSES: "*"
  PGPOOL_PARAMS_PCP_LISTEN_ADDRESSES: "*"
  PGPOOL_PARAMS_SSL: "off"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pgpool-hba-config
  namespace: postgresql
data:
  pool_hba.conf: |-
    local   all         all                               trust
    host    all         all         127.0.0.1/32          trust
    host    all         all         ::1/128               trust
    host    all         all         0.0.0.0/0             md5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgpool
  namespace: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pgpool
  template:
    metadata:
      labels:
        app: pgpool
    spec:
      containers:
      - name: pgpool
        image: pgpool/pgpool:4.2.2
        env:
        - name: POSTGRES_USERNAME
          valueFrom:
            secretKeyRef:
              name: postgres.acid-minimal-cluster.credentials.postgresql.acid.zalan.do
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres.acid-minimal-cluster.credentials.postgresql.acid.zalan.do
              key: password
        - name: PGPOOL_PASSWORD_ENCRYPTION_METHOD
          value: "scram-sha-256"
        - name: PGPOOL_ENABLE_POOL_PASSWD
          value: "true"
        - name: PGPOOL_SKIP_PASSWORD_ENCRYPTION
          value: "false"
        envFrom:
        - configMapRef:
            name: pgpool-config
        ports:
        - containerPort: 5432
        resources:
          limits:
            memory: "1Gi"
            cpu: "100m"
        # The following settings are not required when not using the Pgpool-II PCP command.
        # To enable the following settings, you must define a secret that stores the PCP user's
        # username and password.
        #- name: PGPOOL_PCP_USER
        #  valueFrom:
        #    secretKeyRef:
        #      name: pgpool-pcp-secret
        #      key: username
        #- name: PGPOOL_PCP_PASSWORD
        #  valueFrom:
        #    secretKeyRef:
        #      name: pgpool-pcp-secret
        #      key: password
        volumeMounts:
        - name: pgpool-hba-config
          mountPath: /config
        #- name: pgpool-config
        #  mountPath: /config
        #- name: pgpool-tls
        #  mountPath: /config/tls
      - name: pgpool-stats
        image: pgpool/pgpool2_exporter:1.0
        env:
        - name: POSTGRES_USERNAME
          valueFrom:
            secretKeyRef:
              name: postgres.acid-minimal-cluster.credentials.postgresql.acid.zalan.do
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres.acid-minimal-cluster.credentials.postgresql.acid.zalan.do
              key: password
        - name: POSTGRES_DATABASE
          value: "postgres"
        - name: PGPOOL_SERVICE
          value: "localhost"
        - name: PGPOOL_SERVICE_PORT
          value: "5432"
        - name: SSLMODE
          value: "require"
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
      volumes:
      - name: pgpool-hba-config
        configMap:
          name: pgpool-hba-config
      #- name: pgpool-config
      #  configMap:
      #    name: pgpool-config
      # Configure your own TLS certificate.
      # If not set, Pgpool-II will automatically generate the TLS certificate if ssl = on.
      #- name: pgpool-tls
      #  secret:
      #    secretName: pgpool-tls
---
apiVersion: v1
kind: Service
metadata:
  name: pgpool
  namespace: postgresql
spec:
  selector:
    app: pgpool
  ports:
  - name: pgpool-port
    protocol: TCP
    port: 5432
    targetPort: 5432
---
apiVersion: v1
kind: Service
metadata:
  name: pgpool-stats
  namespace: postgresql
  labels:
    app: pgpool-stats
  annotations:
    prometheus.io/path: /metrics
    prometheus.io/port: "9719"
    prometheus.io/scrape: "true"
spec:
  selector:
    app: pgpool
  ports:
  - name: pgpool-stats-port
    protocol: TCP
    port: 9719
    targetPort: 9719
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: pgpool-servicemonitor
  namespace: monitoring
spec:
  jobLabel: pgpool
  selector:
    matchLabels:
      app: pgpool-stats
  namespaceSelector:
    matchNames:
    - pg
  endpoints:
  - port: pgpool-stats-port
    interval: 30s
