AWSTemplateFormatVersion: '2010-09-09'
Description: 'Bedrock Agent in Slack Chat Application - Main Stack'

Parameters:
  SlackWorkspaceId:
    Type: String
    Description: The ID of the Slack workspace authorized with AWS Chatbot
    
  SlackChannelId:
    Type: String
    Description: The ID of the Slack channel where Bedrock Agent will be used
    
  SlackChannelName:
    Type: String
    Description: The name of the Slack channel where Bedrock Agent will be used
    
  ProjectName:
    Type: String
    Default: bedrock-slack-chat
    Description: The name of the project
  
  CallerIdentityArn:
    Type: String
    Description: The ARN of the caller identity (from Terraform data.aws_caller_identity.current.arn)

  OpenSearchInstanceType:
    Type: String
    Default: t3.small.search
    Description: The instance type for OpenSearch cluster
    AllowedValues:
      - t3.small.search
      - t3.medium.search
      - m5.large.search
      - m5.xlarge.search
      - c5.large.search
      - c5.xlarge.search

Resources:
  # IAM Policy for Bedrock Agent in Slack
  BedrockAgentInSlackPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub "IAMP-${ProjectName}-bedrock-agent-slack"
      Description: Policy for Bedrock Agent in Slack
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - chatbot:DescribeSlackChannelConfigurations
              - bedrock:InvokeAgent
              - bedrock:InvokeModel
              - bedrock:RetrieveAndGenerate
            Resource: '*'

  # IAM Role for Bedrock Agent in Slack
  BedrockAgentInSlackRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "IAMR-${ProjectName}-bedrock-agent-slack"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: chatbot.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Ref BedrockAgentInSlackPolicy
        - arn:aws:iam::aws:policy/ReadOnlyAccess

  # Slack Channel Configuration for Bedrock Agent
  SlackChannelConfiguration:
    Type: AWS::Chatbot::SlackChannelConfiguration
    Properties:
      ConfigurationName: !Sub "${ProjectName}-SlackConfig-${SlackChannelName}"
      IamRoleArn: !GetAtt BedrockAgentInSlackRole.Arn
      SlackWorkspaceId: !Ref SlackWorkspaceId
      SlackChannelId: !Ref SlackChannelId
      GuardrailPolicies:
        - arn:aws:iam::aws:policy/ReadOnlyAccess
        - !Ref BedrockAgentInSlackPolicy
      UserRoleRequired: false

  # IAM Role for OpenSearch
  OpenSearchRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "IAMR-${ProjectName}-opensearch"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - opensearchservice.amazonaws.com
                - bedrock.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonOpenSearchServiceFullAccess

  # IAM Role for Bedrock to access OpenSearch
  BedrockOpenSearchRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "IAMR-${ProjectName}-bedrock-opensearch"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: bedrock.amazonaws.com
              AWS: !Ref CallerIdentityArn
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonOpenSearchServiceReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
      Policies:
        - PolicyName: BedrockOpenSearchAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - es:ESHttpGet
                  - es:ESHttpPost
                  - es:ESHttpPut
                  - es:ESHttpDelete
                Resource: !Sub "arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/${ProjectName}-vectors/*"
        - PolicyName: InvokeAgent
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - bedrock:InvokeAgent
                  - bedrock:InvokeModel
                Resource: '*'

  # S3 Bucket for Knowledge Base Documents
  KnowledgeBaseBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join
        - '-'
        - - !Ref ProjectName
          - 'knowledge-base'
          - !Ref AWS::AccountId
          - !Select
            - 0
            - !Split
              - '-'
              - !Select
                - 2
                - !Split
                  - /
                  - !Ref AWS::StackId
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  # OpenSearch Domain for Vector Store
  OpenSearchDomain:
    Type: AWS::OpenSearchService::Domain
    Properties:
      DomainName: !Sub "${ProjectName}-vectors"
      EngineVersion: "OpenSearch_2.19"
      ClusterConfig:
        InstanceType: !Ref OpenSearchInstanceType
        InstanceCount: 1
        ZoneAwarenessEnabled: false
      EBSOptions:
        EBSEnabled: true
        VolumeSize: 10
        VolumeType: gp3
      EncryptionAtRestOptions:
        Enabled: true
      NodeToNodeEncryptionOptions:
        Enabled: true
      DomainEndpointOptions:
        EnforceHTTPS: true
        TLSSecurityPolicy: "Policy-Min-TLS-1-2-2019-07"
      AdvancedOptions:
        "rest.action.multi.allow_explicit_index": "true"
      AdvancedSecurityOptions:
        Enabled: true
        InternalUserDatabaseEnabled: false
        MasterUserOptions:
          MasterUserARN: !GetAtt BedrockOpenSearchRole.Arn
      AccessPolicies:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !GetAtt BedrockOpenSearchRole.Arn
            Action: 'es:*'
            Resource: !Sub "arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/${ProjectName}-vectors/*"
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-vectors"

Outputs:
  SlackChannelConfigurationArn:
    Description: ARN of the Slack Channel Configuration
    Value: !Ref SlackChannelConfiguration
  
  IAMRoleArn:
    Description: ARN of the IAM Role for Bedrock Agent in Slack
    Value: !GetAtt BedrockAgentInSlackRole.Arn
    
  BedrockOpenSearchRoleArn:
    Description: ARN of the IAM Role for Bedrock to access OpenSearch
    Value: !GetAtt BedrockOpenSearchRole.Arn
    
  OpenSearchDomainArn:
    Description: ARN of the OpenSearch Domain
    Value: !GetAtt OpenSearchDomain.DomainArn
    
  OpenSearchDomainEndpoint:
    Description: Endpoint of the OpenSearch Domain
    Value: !GetAtt OpenSearchDomain.DomainEndpoint
    
  KnowledgeBaseBucketName:
    Description: Name of the S3 Bucket for Knowledge Base Documents
    Value: !Ref KnowledgeBaseBucket
    
  KnowledgeBaseBucketArn:
    Description: ARN of the S3 Bucket for Knowledge Base Documents
    Value: !GetAtt KnowledgeBaseBucket.Arn