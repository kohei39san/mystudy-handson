name: Weekly README Update

on:
  schedule:
    # Run every Monday at 9:00 AM UTC
    - cron: '0 9 * * 1'
  # Allow manual triggering for testing
  workflow_dispatch:

permissions:
  issues: write
  contents: read

jobs:
  create-update-issue:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create Issue for README Updates
        id: create-issue
        uses: actions/github-script@v7
        env:
          README_UPDATE_PROMPT: ${{ vars.README_UPDATE_PROMPT }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Use the prompt from repository variables or fallback to default prompt
            const prompt = process.env.README_UPDATE_PROMPT || `リポジトリにあるREADME.mdをリストアップしてください。
            それぞれのREADME.mdには同一ディレクトリで定義されたリソース構成の説明が書かれています。
            同一ディレクトリのリソース構成を読み取り、それぞれのREADME.mdと内容が異なっていた場合、README.mdを修正してください。
            README.mdへの記載は基本的に日本語でお願いします。`;
            
            const today = new Date().toISOString().split('T')[0];
            
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `README.md 週次更新 (${today})`,
              body: `## README.md 週次更新タスク

このIssueは、リポジトリ内のREADME.mdファイルを最新の状態に保つための週次更新タスクです。

### 更新プロンプト:

\`\`\`
${prompt}
\`\`\`

### 背景:
- 各ディレクトリのREADME.mdは、そのディレクトリで定義されたリソース構成を説明しています
- リソース構成が変更された場合、README.mdも更新する必要があります
- Amazon Q開発エージェントを使用して、この更新を自動化します

### 注意事項:
- このIssueには「Amazon Q development agent」ラベルが付いており、Amazon Qが自動的に対応します
- 更新が完了したら、このIssueをクローズしてください
`,
              labels: ['Amazon Q development agent']
            });
            
            console.log(`Created issue #${issue.data.number}: ${issue.data.html_url}`);
            return issue.data;

      - name: Issue Creation Result
        run: |
          echo "Issue created successfully!"
          echo "Issue number: ${{ fromJSON(steps.create-issue.outputs.result).number }}"
          echo "Issue URL: ${{ fromJSON(steps.create-issue.outputs.result).html_url }}"